version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 21
  pre_build:
    commands:
      - sudo yum update -y
      - echo "Fazendo login no ECR..."      
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 975050217683.dkr.ecr.us-east-1.amazonaws.com        
      - REPOSITORY_URI=975050217683.dkr.ecr.us-east-1.amazonaws.com/meddiflux
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:-latest}  # Garantir que o fallback seja o 'latest' caso o COMMIT_HASH esteja vazio

  build:
    commands:
      - echo "Build iniciado em $(date)"
      - echo "Construindo para o ambiente $ENVIRONMENT"
      - echo "Gerando imagem da MEDDIFLUX..."
      - docker build -f Dockerfile-hom -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG  # Tag da imagem com o commit
      - npm install --loglevel=error
      - echo Rodando testes unitarios...
      - npm test
  post_build:
    commands:
      - echo "Build finalizado com sucesso em $(date)"
      - echo "Fazendo push da imagem para o ECR..."
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG  # Empurrando a imagem com a tag
      - echo $ENVIRONMENT
      - cat docker-compose.yml  
      - echo "Gerando artefato da imagem para o Beanstalk"
artifacts:
  files: docker-compose.yml